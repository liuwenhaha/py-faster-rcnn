+ echo Logging output to experiments/logs/key_VGG16_.txt.2016-08-23_20-28-04
Logging output to experiments/logs/key_VGG16_.txt.2016-08-23_20-28-04
+ ./tools/train_net.py --gpu 2 --solver models/pascal_voc/VGG16/key/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_trainval --iters 70000 --cfg experiments/cfgs/key.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/key.yml', gpu_id=2, imdb_name='voc_2012_trainval', max_iters=70000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/key/solver.prototxt')
Using config:
{'DATA_DIR': '/home/heyihui-local/py-faster-rcnn/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 2,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/heyihui-local/py-faster-rcnn/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/heyihui-local/py-faster-rcnn',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'extra',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'extra',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_trainval` for training
Set proposal method: extra
Appending horizontally-flipped training examples...
voc_2012_trainval extra roidb loaded from /home/heyihui-local/py-faster-rcnn/data/cache/voc_2012_trainval_extra_roidb.pkl
done
Preparing training data...
done
23080 roidb entries
Output will be saved to `/home/heyihui-local/py-faster-rcnn/output/faster_rcnn_end2end/voc_2012_trainval`
Filtered 0 roidb entries: 23080 -> 23080
Computing bounding-box regression targets...
bbox target means:
[[ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]]
[ 0.  0.  0.  0.]
bbox target stdevs:
[[ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]]
[ 0.1  0.1  0.2  0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0823 20:28:21.695201 15608 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/key/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 50000
snapshot: 0
snapshot_prefix: "key"
average_loss: 100
iter_size: 2
I0823 20:28:21.695245 15608 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/key/train.prototxt
I0823 20:28:21.696000 15608 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 21"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "key_targets"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 21"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 21
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 84
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "key_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 84
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 1
}
layer {
  name: "loss_key"
  type: "SmoothL1Loss"
  bottom: "key_pred"
  bottom: "key_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_key"
  loss_weight: 1
}
I0823 20:28:21.696334 15608 layer_factory.hpp:77] Creating layer input-data
I0823 20:28:21.711580 15608 net.cpp:106] Creating Layer input-data
I0823 20:28:21.711611 15608 net.cpp:411] input-data -> data
I0823 20:28:21.711622 15608 net.cpp:411] input-data -> im_info
I0823 20:28:21.711630 15608 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0823 20:28:21.723073 15608 net.cpp:150] Setting up input-data
I0823 20:28:21.723095 15608 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0823 20:28:21.723104 15608 net.cpp:157] Top shape: 1 3 (3)
I0823 20:28:21.723107 15608 net.cpp:157] Top shape: 1 4 (4)
I0823 20:28:21.723109 15608 net.cpp:165] Memory required for data: 7200028
I0823 20:28:21.723114 15608 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0823 20:28:21.723126 15608 net.cpp:106] Creating Layer data_input-data_0_split
I0823 20:28:21.723131 15608 net.cpp:454] data_input-data_0_split <- data
I0823 20:28:21.723140 15608 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0823 20:28:21.723148 15608 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0823 20:28:21.723206 15608 net.cpp:150] Setting up data_input-data_0_split
I0823 20:28:21.723214 15608 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0823 20:28:21.723219 15608 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0823 20:28:21.723222 15608 net.cpp:165] Memory required for data: 21600028
I0823 20:28:21.723224 15608 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0823 20:28:21.723230 15608 net.cpp:106] Creating Layer im_info_input-data_1_split
I0823 20:28:21.723233 15608 net.cpp:454] im_info_input-data_1_split <- im_info
I0823 20:28:21.723239 15608 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0823 20:28:21.723247 15608 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0823 20:28:21.723294 15608 net.cpp:150] Setting up im_info_input-data_1_split
I0823 20:28:21.723300 15608 net.cpp:157] Top shape: 1 3 (3)
I0823 20:28:21.723304 15608 net.cpp:157] Top shape: 1 3 (3)
I0823 20:28:21.723306 15608 net.cpp:165] Memory required for data: 21600052
I0823 20:28:21.723309 15608 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0823 20:28:21.723316 15608 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0823 20:28:21.723320 15608 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0823 20:28:21.723325 15608 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0823 20:28:21.723331 15608 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0823 20:28:21.723381 15608 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0823 20:28:21.723387 15608 net.cpp:157] Top shape: 1 4 (4)
I0823 20:28:21.723390 15608 net.cpp:157] Top shape: 1 4 (4)
I0823 20:28:21.723393 15608 net.cpp:165] Memory required for data: 21600084
I0823 20:28:21.723395 15608 layer_factory.hpp:77] Creating layer conv1_1
I0823 20:28:21.723408 15608 net.cpp:106] Creating Layer conv1_1
I0823 20:28:21.723413 15608 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0823 20:28:21.723420 15608 net.cpp:411] conv1_1 -> conv1_1
I0823 20:28:22.082973 15608 net.cpp:150] Setting up conv1_1
I0823 20:28:22.083036 15608 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0823 20:28:22.083041 15608 net.cpp:165] Memory required for data: 175200084
I0823 20:28:22.083075 15608 layer_factory.hpp:77] Creating layer relu1_1
I0823 20:28:22.083096 15608 net.cpp:106] Creating Layer relu1_1
I0823 20:28:22.083103 15608 net.cpp:454] relu1_1 <- conv1_1
I0823 20:28:22.083114 15608 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0823 20:28:22.086045 15608 net.cpp:150] Setting up relu1_1
I0823 20:28:22.086076 15608 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0823 20:28:22.086081 15608 net.cpp:165] Memory required for data: 328800084
I0823 20:28:22.086087 15608 layer_factory.hpp:77] Creating layer conv1_2
I0823 20:28:22.086107 15608 net.cpp:106] Creating Layer conv1_2
I0823 20:28:22.086113 15608 net.cpp:454] conv1_2 <- conv1_1
I0823 20:28:22.086125 15608 net.cpp:411] conv1_2 -> conv1_2
I0823 20:28:22.099858 15608 net.cpp:150] Setting up conv1_2
I0823 20:28:22.099903 15608 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0823 20:28:22.099910 15608 net.cpp:165] Memory required for data: 482400084
I0823 20:28:22.099936 15608 layer_factory.hpp:77] Creating layer relu1_2
I0823 20:28:22.099953 15608 net.cpp:106] Creating Layer relu1_2
I0823 20:28:22.099961 15608 net.cpp:454] relu1_2 <- conv1_2
I0823 20:28:22.099974 15608 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0823 20:28:22.100360 15608 net.cpp:150] Setting up relu1_2
I0823 20:28:22.100380 15608 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0823 20:28:22.100386 15608 net.cpp:165] Memory required for data: 636000084
I0823 20:28:22.100391 15608 layer_factory.hpp:77] Creating layer pool1
I0823 20:28:22.100410 15608 net.cpp:106] Creating Layer pool1
I0823 20:28:22.100416 15608 net.cpp:454] pool1 <- conv1_2
I0823 20:28:22.100427 15608 net.cpp:411] pool1 -> pool1
I0823 20:28:22.100566 15608 net.cpp:150] Setting up pool1
I0823 20:28:22.100580 15608 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0823 20:28:22.100585 15608 net.cpp:165] Memory required for data: 674400084
I0823 20:28:22.100590 15608 layer_factory.hpp:77] Creating layer conv2_1
I0823 20:28:22.100608 15608 net.cpp:106] Creating Layer conv2_1
I0823 20:28:22.100616 15608 net.cpp:454] conv2_1 <- pool1
I0823 20:28:22.100628 15608 net.cpp:411] conv2_1 -> conv2_1
I0823 20:28:22.106389 15608 net.cpp:150] Setting up conv2_1
I0823 20:28:22.106417 15608 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0823 20:28:22.106423 15608 net.cpp:165] Memory required for data: 751200084
I0823 20:28:22.106443 15608 layer_factory.hpp:77] Creating layer relu2_1
I0823 20:28:22.106454 15608 net.cpp:106] Creating Layer relu2_1
I0823 20:28:22.106462 15608 net.cpp:454] relu2_1 <- conv2_1
I0823 20:28:22.106472 15608 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0823 20:28:22.106833 15608 net.cpp:150] Setting up relu2_1
I0823 20:28:22.106853 15608 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0823 20:28:22.106858 15608 net.cpp:165] Memory required for data: 828000084
I0823 20:28:22.106863 15608 layer_factory.hpp:77] Creating layer conv2_2
I0823 20:28:22.106878 15608 net.cpp:106] Creating Layer conv2_2
I0823 20:28:22.106884 15608 net.cpp:454] conv2_2 <- conv2_1
I0823 20:28:22.106897 15608 net.cpp:411] conv2_2 -> conv2_2
I0823 20:28:22.114634 15608 net.cpp:150] Setting up conv2_2
I0823 20:28:22.114660 15608 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0823 20:28:22.114666 15608 net.cpp:165] Memory required for data: 904800084
I0823 20:28:22.114680 15608 layer_factory.hpp:77] Creating layer relu2_2
I0823 20:28:22.114689 15608 net.cpp:106] Creating Layer relu2_2
I0823 20:28:22.114696 15608 net.cpp:454] relu2_2 <- conv2_2
I0823 20:28:22.114706 15608 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0823 20:28:22.115428 15608 net.cpp:150] Setting up relu2_2
I0823 20:28:22.115450 15608 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0823 20:28:22.115456 15608 net.cpp:165] Memory required for data: 981600084
I0823 20:28:22.115461 15608 layer_factory.hpp:77] Creating layer pool2
I0823 20:28:22.115473 15608 net.cpp:106] Creating Layer pool2
I0823 20:28:22.115479 15608 net.cpp:454] pool2 <- conv2_2
I0823 20:28:22.115490 15608 net.cpp:411] pool2 -> pool2
I0823 20:28:22.115612 15608 net.cpp:150] Setting up pool2
I0823 20:28:22.115627 15608 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0823 20:28:22.115631 15608 net.cpp:165] Memory required for data: 1000800084
I0823 20:28:22.115635 15608 layer_factory.hpp:77] Creating layer conv3_1
I0823 20:28:22.115649 15608 net.cpp:106] Creating Layer conv3_1
I0823 20:28:22.115658 15608 net.cpp:454] conv3_1 <- pool2
I0823 20:28:22.115671 15608 net.cpp:411] conv3_1 -> conv3_1
I0823 20:28:22.121376 15608 net.cpp:150] Setting up conv3_1
I0823 20:28:22.121402 15608 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0823 20:28:22.121407 15608 net.cpp:165] Memory required for data: 1039200084
I0823 20:28:22.121426 15608 layer_factory.hpp:77] Creating layer relu3_1
I0823 20:28:22.121438 15608 net.cpp:106] Creating Layer relu3_1
I0823 20:28:22.121444 15608 net.cpp:454] relu3_1 <- conv3_1
I0823 20:28:22.121454 15608 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0823 20:28:22.121793 15608 net.cpp:150] Setting up relu3_1
I0823 20:28:22.121809 15608 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0823 20:28:22.121814 15608 net.cpp:165] Memory required for data: 1077600084
I0823 20:28:22.121819 15608 layer_factory.hpp:77] Creating layer conv3_2
I0823 20:28:22.121839 15608 net.cpp:106] Creating Layer conv3_2
I0823 20:28:22.121845 15608 net.cpp:454] conv3_2 <- conv3_1
I0823 20:28:22.121855 15608 net.cpp:411] conv3_2 -> conv3_2
I0823 20:28:22.129279 15608 net.cpp:150] Setting up conv3_2
I0823 20:28:22.129307 15608 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0823 20:28:22.129312 15608 net.cpp:165] Memory required for data: 1116000084
I0823 20:28:22.129323 15608 layer_factory.hpp:77] Creating layer relu3_2
I0823 20:28:22.129334 15608 net.cpp:106] Creating Layer relu3_2
I0823 20:28:22.129339 15608 net.cpp:454] relu3_2 <- conv3_2
I0823 20:28:22.129348 15608 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0823 20:28:22.129676 15608 net.cpp:150] Setting up relu3_2
I0823 20:28:22.129693 15608 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0823 20:28:22.129698 15608 net.cpp:165] Memory required for data: 1154400084
I0823 20:28:22.129703 15608 layer_factory.hpp:77] Creating layer conv3_3
I0823 20:28:22.129717 15608 net.cpp:106] Creating Layer conv3_3
I0823 20:28:22.129722 15608 net.cpp:454] conv3_3 <- conv3_2
I0823 20:28:22.129732 15608 net.cpp:411] conv3_3 -> conv3_3
I0823 20:28:22.137055 15608 net.cpp:150] Setting up conv3_3
I0823 20:28:22.137084 15608 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0823 20:28:22.137089 15608 net.cpp:165] Memory required for data: 1192800084
I0823 20:28:22.137100 15608 layer_factory.hpp:77] Creating layer relu3_3
I0823 20:28:22.137111 15608 net.cpp:106] Creating Layer relu3_3
I0823 20:28:22.137117 15608 net.cpp:454] relu3_3 <- conv3_3
I0823 20:28:22.137126 15608 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0823 20:28:22.137792 15608 net.cpp:150] Setting up relu3_3
I0823 20:28:22.137812 15608 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0823 20:28:22.137817 15608 net.cpp:165] Memory required for data: 1231200084
I0823 20:28:22.137822 15608 layer_factory.hpp:77] Creating layer pool3
I0823 20:28:22.137833 15608 net.cpp:106] Creating Layer pool3
I0823 20:28:22.137838 15608 net.cpp:454] pool3 <- conv3_3
I0823 20:28:22.137848 15608 net.cpp:411] pool3 -> pool3
I0823 20:28:22.137962 15608 net.cpp:150] Setting up pool3
I0823 20:28:22.137975 15608 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0823 20:28:22.137979 15608 net.cpp:165] Memory required for data: 1240800084
I0823 20:28:22.137984 15608 layer_factory.hpp:77] Creating layer conv4_1
I0823 20:28:22.137998 15608 net.cpp:106] Creating Layer conv4_1
I0823 20:28:22.138005 15608 net.cpp:454] conv4_1 <- pool3
I0823 20:28:22.138016 15608 net.cpp:411] conv4_1 -> conv4_1
I0823 20:28:22.153249 15608 net.cpp:150] Setting up conv4_1
I0823 20:28:22.153280 15608 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0823 20:28:22.153285 15608 net.cpp:165] Memory required for data: 1260000084
I0823 20:28:22.153297 15608 layer_factory.hpp:77] Creating layer relu4_1
I0823 20:28:22.153311 15608 net.cpp:106] Creating Layer relu4_1
I0823 20:28:22.153316 15608 net.cpp:454] relu4_1 <- conv4_1
I0823 20:28:22.153324 15608 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0823 20:28:22.153951 15608 net.cpp:150] Setting up relu4_1
I0823 20:28:22.153970 15608 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0823 20:28:22.153975 15608 net.cpp:165] Memory required for data: 1279200084
I0823 20:28:22.153978 15608 layer_factory.hpp:77] Creating layer conv4_2
I0823 20:28:22.153993 15608 net.cpp:106] Creating Layer conv4_2
I0823 20:28:22.153998 15608 net.cpp:454] conv4_2 <- conv4_1
I0823 20:28:22.154007 15608 net.cpp:411] conv4_2 -> conv4_2
I0823 20:28:22.171634 15608 net.cpp:150] Setting up conv4_2
I0823 20:28:22.171658 15608 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0823 20:28:22.171661 15608 net.cpp:165] Memory required for data: 1298400084
I0823 20:28:22.171682 15608 layer_factory.hpp:77] Creating layer relu4_2
I0823 20:28:22.171692 15608 net.cpp:106] Creating Layer relu4_2
I0823 20:28:22.171697 15608 net.cpp:454] relu4_2 <- conv4_2
I0823 20:28:22.171705 15608 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0823 20:28:22.171967 15608 net.cpp:150] Setting up relu4_2
I0823 20:28:22.171982 15608 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0823 20:28:22.171985 15608 net.cpp:165] Memory required for data: 1317600084
I0823 20:28:22.171989 15608 layer_factory.hpp:77] Creating layer conv4_3
I0823 20:28:22.172003 15608 net.cpp:106] Creating Layer conv4_3
I0823 20:28:22.172008 15608 net.cpp:454] conv4_3 <- conv4_2
I0823 20:28:22.172019 15608 net.cpp:411] conv4_3 -> conv4_3
I0823 20:28:22.192256 15608 net.cpp:150] Setting up conv4_3
I0823 20:28:22.192329 15608 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0823 20:28:22.192337 15608 net.cpp:165] Memory required for data: 1336800084
I0823 20:28:22.192354 15608 layer_factory.hpp:77] Creating layer relu4_3
I0823 20:28:22.192374 15608 net.cpp:106] Creating Layer relu4_3
I0823 20:28:22.192384 15608 net.cpp:454] relu4_3 <- conv4_3
I0823 20:28:22.192396 15608 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0823 20:28:22.193251 15608 net.cpp:150] Setting up relu4_3
I0823 20:28:22.193281 15608 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0823 20:28:22.193287 15608 net.cpp:165] Memory required for data: 1356000084
I0823 20:28:22.193295 15608 layer_factory.hpp:77] Creating layer pool4
I0823 20:28:22.193310 15608 net.cpp:106] Creating Layer pool4
I0823 20:28:22.193320 15608 net.cpp:454] pool4 <- conv4_3
I0823 20:28:22.193331 15608 net.cpp:411] pool4 -> pool4
I0823 20:28:22.193511 15608 net.cpp:150] Setting up pool4
I0823 20:28:22.193524 15608 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0823 20:28:22.193529 15608 net.cpp:165] Memory required for data: 1360902996
I0823 20:28:22.193536 15608 layer_factory.hpp:77] Creating layer conv5_1
I0823 20:28:22.193555 15608 net.cpp:106] Creating Layer conv5_1
I0823 20:28:22.193564 15608 net.cpp:454] conv5_1 <- pool4
I0823 20:28:22.193577 15608 net.cpp:411] conv5_1 -> conv5_1
I0823 20:28:22.214380 15608 net.cpp:150] Setting up conv5_1
I0823 20:28:22.214423 15608 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0823 20:28:22.214431 15608 net.cpp:165] Memory required for data: 1365805908
I0823 20:28:22.214447 15608 layer_factory.hpp:77] Creating layer relu5_1
I0823 20:28:22.214462 15608 net.cpp:106] Creating Layer relu5_1
I0823 20:28:22.214473 15608 net.cpp:454] relu5_1 <- conv5_1
I0823 20:28:22.214491 15608 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0823 20:28:22.214926 15608 net.cpp:150] Setting up relu5_1
I0823 20:28:22.214947 15608 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0823 20:28:22.214953 15608 net.cpp:165] Memory required for data: 1370708820
I0823 20:28:22.214961 15608 layer_factory.hpp:77] Creating layer conv5_2
I0823 20:28:22.214982 15608 net.cpp:106] Creating Layer conv5_2
I0823 20:28:22.214992 15608 net.cpp:454] conv5_2 <- conv5_1
I0823 20:28:22.215005 15608 net.cpp:411] conv5_2 -> conv5_2
I0823 20:28:22.235539 15608 net.cpp:150] Setting up conv5_2
I0823 20:28:22.235584 15608 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0823 20:28:22.235589 15608 net.cpp:165] Memory required for data: 1375611732
I0823 20:28:22.235604 15608 layer_factory.hpp:77] Creating layer relu5_2
I0823 20:28:22.235621 15608 net.cpp:106] Creating Layer relu5_2
I0823 20:28:22.235628 15608 net.cpp:454] relu5_2 <- conv5_2
I0823 20:28:22.235638 15608 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0823 20:28:22.235971 15608 net.cpp:150] Setting up relu5_2
I0823 20:28:22.235987 15608 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0823 20:28:22.235991 15608 net.cpp:165] Memory required for data: 1380514644
I0823 20:28:22.235996 15608 layer_factory.hpp:77] Creating layer conv5_3
I0823 20:28:22.236027 15608 net.cpp:106] Creating Layer conv5_3
I0823 20:28:22.236034 15608 net.cpp:454] conv5_3 <- conv5_2
I0823 20:28:22.236044 15608 net.cpp:411] conv5_3 -> conv5_3
I0823 20:28:22.254281 15608 net.cpp:150] Setting up conv5_3
I0823 20:28:22.254315 15608 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0823 20:28:22.254320 15608 net.cpp:165] Memory required for data: 1385417556
I0823 20:28:22.254333 15608 layer_factory.hpp:77] Creating layer relu5_3
I0823 20:28:22.254348 15608 net.cpp:106] Creating Layer relu5_3
I0823 20:28:22.254354 15608 net.cpp:454] relu5_3 <- conv5_3
I0823 20:28:22.254362 15608 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0823 20:28:22.255053 15608 net.cpp:150] Setting up relu5_3
I0823 20:28:22.255077 15608 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0823 20:28:22.255081 15608 net.cpp:165] Memory required for data: 1390320468
I0823 20:28:22.255087 15608 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0823 20:28:22.255097 15608 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0823 20:28:22.255105 15608 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0823 20:28:22.255115 15608 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0823 20:28:22.255130 15608 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0823 20:28:22.255246 15608 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0823 20:28:22.255259 15608 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0823 20:28:22.255265 15608 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0823 20:28:22.255270 15608 net.cpp:165] Memory required for data: 1400126292
I0823 20:28:22.255273 15608 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0823 20:28:22.255303 15608 net.cpp:106] Creating Layer rpn_conv/3x3
I0823 20:28:22.255311 15608 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0823 20:28:22.255322 15608 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0823 20:28:22.305630 15608 net.cpp:150] Setting up rpn_conv/3x3
I0823 20:28:22.305673 15608 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0823 20:28:22.305678 15608 net.cpp:165] Memory required for data: 1405029204
I0823 20:28:22.305690 15608 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0823 20:28:22.305702 15608 net.cpp:106] Creating Layer rpn_relu/3x3
I0823 20:28:22.305707 15608 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0823 20:28:22.305716 15608 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0823 20:28:22.305966 15608 net.cpp:150] Setting up rpn_relu/3x3
I0823 20:28:22.305979 15608 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0823 20:28:22.305982 15608 net.cpp:165] Memory required for data: 1409932116
I0823 20:28:22.305985 15608 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0823 20:28:22.305995 15608 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0823 20:28:22.305999 15608 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0823 20:28:22.306005 15608 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0823 20:28:22.306015 15608 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0823 20:28:22.306102 15608 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0823 20:28:22.306112 15608 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0823 20:28:22.306115 15608 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0823 20:28:22.306118 15608 net.cpp:165] Memory required for data: 1419737940
I0823 20:28:22.306121 15608 layer_factory.hpp:77] Creating layer rpn_cls_score
I0823 20:28:22.306138 15608 net.cpp:106] Creating Layer rpn_cls_score
I0823 20:28:22.306143 15608 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0823 20:28:22.306152 15608 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0823 20:28:22.308923 15608 net.cpp:150] Setting up rpn_cls_score
I0823 20:28:22.308959 15608 net.cpp:157] Top shape: 1 18 38 63 (43092)
I0823 20:28:22.308964 15608 net.cpp:165] Memory required for data: 1419910308
I0823 20:28:22.308974 15608 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0823 20:28:22.308985 15608 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0823 20:28:22.308990 15608 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0823 20:28:22.308998 15608 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0823 20:28:22.309025 15608 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0823 20:28:22.309114 15608 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0823 20:28:22.309124 15608 net.cpp:157] Top shape: 1 18 38 63 (43092)
I0823 20:28:22.309129 15608 net.cpp:157] Top shape: 1 18 38 63 (43092)
I0823 20:28:22.309132 15608 net.cpp:165] Memory required for data: 1420255044
I0823 20:28:22.309135 15608 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0823 20:28:22.309152 15608 net.cpp:106] Creating Layer rpn_bbox_pred
I0823 20:28:22.309159 15608 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0823 20:28:22.309166 15608 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0823 20:28:22.311506 15608 net.cpp:150] Setting up rpn_bbox_pred
I0823 20:28:22.311524 15608 net.cpp:157] Top shape: 1 36 38 63 (86184)
I0823 20:28:22.311527 15608 net.cpp:165] Memory required for data: 1420599780
I0823 20:28:22.311535 15608 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0823 20:28:22.311545 15608 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0823 20:28:22.311549 15608 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0823 20:28:22.311556 15608 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0823 20:28:22.311568 15608 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0823 20:28:22.311650 15608 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0823 20:28:22.311658 15608 net.cpp:157] Top shape: 1 36 38 63 (86184)
I0823 20:28:22.311663 15608 net.cpp:157] Top shape: 1 36 38 63 (86184)
I0823 20:28:22.311666 15608 net.cpp:165] Memory required for data: 1421289252
I0823 20:28:22.311669 15608 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0823 20:28:22.311681 15608 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0823 20:28:22.311687 15608 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0823 20:28:22.311697 15608 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0823 20:28:22.311749 15608 net.cpp:150] Setting up rpn_cls_score_reshape
I0823 20:28:22.311758 15608 net.cpp:157] Top shape: 1 2 342 63 (43092)
I0823 20:28:22.311761 15608 net.cpp:165] Memory required for data: 1421461620
I0823 20:28:22.311765 15608 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0823 20:28:22.311774 15608 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0823 20:28:22.311776 15608 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0823 20:28:22.311784 15608 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0823 20:28:22.311791 15608 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0823 20:28:22.311864 15608 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0823 20:28:22.311873 15608 net.cpp:157] Top shape: 1 2 342 63 (43092)
I0823 20:28:22.311878 15608 net.cpp:157] Top shape: 1 2 342 63 (43092)
I0823 20:28:22.311880 15608 net.cpp:165] Memory required for data: 1421806356
I0823 20:28:22.311884 15608 layer_factory.hpp:77] Creating layer rpn-data
I0823 20:28:22.312485 15608 net.cpp:106] Creating Layer rpn-data
I0823 20:28:22.312500 15608 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0823 20:28:22.312507 15608 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0823 20:28:22.312512 15608 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0823 20:28:22.312517 15608 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0823 20:28:22.312525 15608 net.cpp:411] rpn-data -> rpn_labels
I0823 20:28:22.312536 15608 net.cpp:411] rpn-data -> rpn_bbox_targets
I0823 20:28:22.312546 15608 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0823 20:28:22.312554 15608 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0823 20:28:22.313575 15608 net.cpp:150] Setting up rpn-data
I0823 20:28:22.313592 15608 net.cpp:157] Top shape: 1 1 342 63 (21546)
I0823 20:28:22.313597 15608 net.cpp:157] Top shape: 1 36 38 63 (86184)
I0823 20:28:22.313601 15608 net.cpp:157] Top shape: 1 36 38 63 (86184)
I0823 20:28:22.313606 15608 net.cpp:157] Top shape: 1 36 38 63 (86184)
I0823 20:28:22.313608 15608 net.cpp:165] Memory required for data: 1422926748
I0823 20:28:22.313612 15608 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0823 20:28:22.313622 15608 net.cpp:106] Creating Layer rpn_loss_cls
I0823 20:28:22.313627 15608 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0823 20:28:22.313632 15608 net.cpp:454] rpn_loss_cls <- rpn_labels
I0823 20:28:22.313638 15608 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0823 20:28:22.313650 15608 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0823 20:28:22.314182 15608 net.cpp:150] Setting up rpn_loss_cls
I0823 20:28:22.314194 15608 net.cpp:157] Top shape: (1)
I0823 20:28:22.314198 15608 net.cpp:160]     with loss weight 1
I0823 20:28:22.314218 15608 net.cpp:165] Memory required for data: 1422926752
I0823 20:28:22.314221 15608 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0823 20:28:22.314234 15608 net.cpp:106] Creating Layer rpn_loss_bbox
I0823 20:28:22.314241 15608 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0823 20:28:22.314247 15608 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0823 20:28:22.314251 15608 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0823 20:28:22.314256 15608 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0823 20:28:22.314265 15608 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0823 20:28:22.315201 15608 net.cpp:150] Setting up rpn_loss_bbox
I0823 20:28:22.315215 15608 net.cpp:157] Top shape: (1)
I0823 20:28:22.315218 15608 net.cpp:160]     with loss weight 1
I0823 20:28:22.315224 15608 net.cpp:165] Memory required for data: 1422926756
I0823 20:28:22.315228 15608 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0823 20:28:22.315237 15608 net.cpp:106] Creating Layer rpn_cls_prob
I0823 20:28:22.315243 15608 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0823 20:28:22.315250 15608 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0823 20:28:22.315959 15608 net.cpp:150] Setting up rpn_cls_prob
I0823 20:28:22.315974 15608 net.cpp:157] Top shape: 1 2 342 63 (43092)
I0823 20:28:22.315979 15608 net.cpp:165] Memory required for data: 1423099124
I0823 20:28:22.315981 15608 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0823 20:28:22.315990 15608 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0823 20:28:22.315994 15608 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0823 20:28:22.316004 15608 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0823 20:28:22.316058 15608 net.cpp:150] Setting up rpn_cls_prob_reshape
I0823 20:28:22.316069 15608 net.cpp:157] Top shape: 1 18 38 63 (43092)
I0823 20:28:22.316072 15608 net.cpp:165] Memory required for data: 1423271492
I0823 20:28:22.316076 15608 layer_factory.hpp:77] Creating layer proposal
I0823 20:28:22.328059 15608 net.cpp:106] Creating Layer proposal
I0823 20:28:22.328088 15608 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0823 20:28:22.328096 15608 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0823 20:28:22.328100 15608 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0823 20:28:22.328109 15608 net.cpp:411] proposal -> rpn_rois
I0823 20:28:22.334635 15608 net.cpp:150] Setting up proposal
I0823 20:28:22.334682 15608 net.cpp:157] Top shape: 1 5 (5)
I0823 20:28:22.334689 15608 net.cpp:165] Memory required for data: 1423271512
I0823 20:28:22.334697 15608 layer_factory.hpp:77] Creating layer roi-data
I0823 20:28:22.335108 15608 net.cpp:106] Creating Layer roi-data
I0823 20:28:22.335129 15608 net.cpp:454] roi-data <- rpn_rois
I0823 20:28:22.335141 15608 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0823 20:28:22.335186 15608 net.cpp:411] roi-data -> rois
I0823 20:28:22.335207 15608 net.cpp:411] roi-data -> labels
I0823 20:28:22.335222 15608 net.cpp:411] roi-data -> bbox_targets
I0823 20:28:22.335239 15608 net.cpp:411] roi-data -> bbox_inside_weights
I0823 20:28:22.335256 15608 net.cpp:411] roi-data -> bbox_outside_weights
I0823 20:28:22.335273 15608 net.cpp:411] roi-data -> key_targets
Traceback (most recent call last):
  File "./tools/train_net.py", line 112, in <module>
    max_iters=args.max_iters)
  File "/home/heyihui-local/py-faster-rcnn/tools/../lib/fast_rcnn/train.py", line 177, in train_net
    pretrained_model=pretrained_model)
  File "/home/heyihui-local/py-faster-rcnn/tools/../lib/fast_rcnn/train.py", line 44, in __init__
    self.solver = caffe.SGDSolver(solver_prototxt)
  File "/home/heyihui-local/py-faster-rcnn/tools/../lib/datasets/../../lib/rpn/proposal_target_layer.py", line 42, in setup
    top[6].reshape(1, self._num_classes * 4)
IndexError: Index out of range
